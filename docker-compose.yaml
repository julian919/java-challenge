version: "3.9" # Specify the Docker Compose file format version

services:
  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8765:8765"
    depends_on:
      - eureka-service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8100:8100"
    depends_on:
      - mongodb
      - eureka-service
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://admin:password@mongodb:27017/java_challenge?authSource=admin
  postcodes-service:
    build:
      context: ./postcodes-service
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - eureka-service
    deploy:
      replicas: 1
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://admin:password@mongodb:27017/java_challenge?authSource=admin
  mongodb:
    image: mongo:7.0 # Use the official MongoDB image
    container_name: mongodb # Name the container for easier reference
    ports:
      - "27017:27017" # Expose MongoDB on localhost
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data
      - ./init-data:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin # Default root username
      MONGO_INITDB_ROOT_PASSWORD: password # Default root password

volumes:
  mongodb_data:
